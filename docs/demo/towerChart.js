let scn = atlas.scene();
let dt = await atlas.csv("csv/elections-2020.csv");
let biden = dt.transform("filter", [{field: "Biden_margin", range: [0, 100]}]);
let trump = dt.transform("filter", [{field: "Trump_margin", range: [0, 100]}]);
let rect = scn.mark("rect", {top: 60, left: 150, width: 350, height: 500, strokeColor: "white", fillColor: "#1E71B8"});
let bidenWins = scn.divide(rect, biden, {orientation: "vertical", field: "State"});
let htEncoding = scn.encode(bidenWins.firstChild, {field: "Biden", channel: "height", rangeExtent: 80});
let wdEnc = scn.encode(bidenWins.firstChild, {field: "Biden_margin", channel: "width"});
bidenWins.sortChildren("width");
bidenWins.layout.horzCellAlignment = "right";
rect = scn.mark("rect", {top: 60, left: 400, width: 350, height: 500, strokeColor: "white", fillColor: "#CC1A59"});
let trumpWins = scn.divide(rect, trump, {orientation: "vertical", field: "State"});
scn.encode(trumpWins.firstChild, {field: "Trump", channel: "height", scale: htEncoding.scale});
scn.encode(trumpWins.firstChild, {field: "Trump_margin", channel: "width", scale: wdEnc.scale});
trumpWins.sortChildren("width");
scn.align([bidenWins, trumpWins], "bottom");
scn.affix(bidenWins, trumpWins, "x", {itemAnchor: "right", baseAnchor: "left"});
scn.axis("width", "Trump_margin", {orientation: "bottom"});
scn.axis("width", "Biden_margin", {orientation: "bottom", flip: true});
let y = trumpWins.bounds.bottom - htEncoding.scale.map(270);
scn.mark("line", {x1: 50, y1: y, x2: 760, y2: y, strokeWidth: 3, strokeColor: "orange"});
scn.mark("text", {x: 760, y: y, anchor: ["right", "bottom"], text: "270 electoral votes required to win", fontSize: "16pt", fillColor: "#c87259"});