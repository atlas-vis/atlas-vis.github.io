<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marks on</title><link>https://atlas-vis.github.io/docs/marks/</link><description>Recent content in Marks on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="https://atlas-vis.github.io/docs/marks/index.xml" rel="self" type="application/rss+xml"/><item><title>Mark</title><link>https://atlas-vis.github.io/docs/marks/mark/</link><pubDate>Sun, 20 Jun 2021 20:24:35 -0400</pubDate><guid>https://atlas-vis.github.io/docs/marks/mark/</guid><description>Subclasses: Path, Text, Image
The Mark class represents a primitive building block of a visualization. There are different types of marks, implemented as the child classes of Mark: Path, Text, and Image.
Properties property explanation type default value id the unique id of the mark String type the type of the mark String dataScope the data scope of the mark DataScope undefined opacity the opacity of the mark (between 0 and 1) Number 1 visibility whether the mark is visible (&amp;ldquo;visible&amp;rdquo; or &amp;ldquo;hidden&amp;rdquo;) String &amp;ldquo;visible&amp;rdquo; Methods method explanation return type contains(x, y) whether this mark contains a point</description></item><item><title>Path</title><link>https://atlas-vis.github.io/docs/marks/path/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>https://atlas-vis.github.io/docs/marks/path/</guid><description>extends Mark
Subclasses: RectPath, CirclePath, AreaPath, PolygonPath, ArcPath, PiePath, RingPath
The Path class represents a gemetric path consisting of multiple vertices connected by segments. To create a path object, use the mark method in the Scene class, for example:
let path = scene.mark(&amp;quot;path&amp;quot;, { vertices: [ [200, 50], [350, 50], [500, 50] ], strokeColor: &amp;quot;#95D0F5&amp;quot; }); A straight line is also represented as a path object in Atlas. The following code returns a Path object with two vertices.</description></item><item><title>RectPath</title><link>https://atlas-vis.github.io/docs/marks/rectpath/</link><pubDate>Thu, 12 Nov 2020 13:26:54 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/rectpath/</guid><description>extends Path
The RectPath class represents a rectangular mark. To create a RectPath object, use the mark method in the Scene class, for example:
let rect = scene.mark(&amp;quot;rect&amp;quot;, {top: 50, left: 100, width: 200, height: 80, fillColor: &amp;quot;blue&amp;quot;}); Properties property explanation type default value left the x coordinate of the left hand side of the rectangle Number 0 top the y coordinate of the top of the rectangle Number 0 right the x coordinate of the right hand side of the rectangle Number bottom the y coordinate of the bottom of the rectangle Number width the width of the rectangle Number 100 height the height of the rectangle Number 100 area the area of the rectangle Number topSegment the top segment of the rectangle Segment rightSegment the right segment of the rectangle Segment bottomSegment the bottom segment of the rectangle Segment leftSegment the left segment of the rectangle Segment Properties inherited from Path property explanation type default value bounds the bounding rectangle of the path Rectangle x the x coordinate of the center of the path bounds Number y the y coordinate of the center of the path bounds Number curveMode how the segments are drawn String &amp;ldquo;linear&amp;rdquo; vertices the vertices along the path Array segments the segments on the path Array firstVertex returns the first vertex of the path Vertex firstSegment returns the first segment of the path Segment fillColor the fill color of the path if it is closed Color undefined strokeColor the stroke color of the path Color &amp;ldquo;#ccc&amp;rdquo; strokeDash the dashes and gaps for the path stroke String &amp;ldquo;none&amp;rdquo; strokeWidth the stroke width of the path in pixels Number 1 opacity the opacity value of the path (between 0 and 1) Number 1 vxShape the shape of the vertices on this path</description></item><item><title>CirclePath</title><link>https://atlas-vis.github.io/docs/marks/circlepath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/circlepath/</guid><description>extends Path
The CirclePath class represents a circle mark. To create a CirclePath object, use the mark method in the Scene class, for example:
let circle = scene.mark(&amp;quot;circle&amp;quot;, {x: 50, y: 100, radius: 20}); Properties property explanation type default value radius the radius of the circle Number 100 area the area of the circle Number Properties inherited from Path property explanation type default value bounds the bounding rectangle of the path Rectangle x the x coordinate of the center of circle Number 0 y the y coordinate of the center of circle Number 0 curveMode how the segments are drawn String vertices the vertices along the path Array segments the segments on the path Array firstVertex returns the first vertex of the path Vertex firstSegment returns the first segment of the path Segment fillColor the fill color of the path if it is closed Color undefined strokeColor the stroke color of the path Color &amp;ldquo;#ccc&amp;rdquo; strokeDash the dashes and gaps for the path stroke String &amp;ldquo;none&amp;rdquo; strokeWidth the stroke width of the path in pixels Number 1 opacity the opacity value of the path (between 0 and 1) Number 1 vxShape the shape of the vertices on this path</description></item><item><title>PiePath</title><link>https://atlas-vis.github.io/docs/marks/piepath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/piepath/</guid><description>extends Path
The PiePath class represents a pie mark that is used in a pie chart. You cannot create a PiePath object directly, instead, you need to use the divide method in the Scene class to transform a CirclePath to a collection of PiePath objects. Here is an explanation of the divide operation.
Properties property explanation type default value radius the radius of the pie Number 100 startAngle the start angle of the pie in degrees Number 0 endAngle the end angle of the pie in degrees Number 90 Angles in Atlas are specified using the polar coordinate system, where 0 is at the positive x axis, and the angle increases in the counterclockwise direction.</description></item><item><title>AreaPath</title><link>https://atlas-vis.github.io/docs/marks/areapath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/areapath/</guid><description>extends Path
The AreaPath class represents an enclosed area mark that is used in visualizations such as the area chart and the violin plot. You cannot create an AreaPath object directly, instead, you need to use the densify method in the Scene class to transform a RectPath to an AreaPath. Here is an explanation of the densify operation. The figure below shows how AreaPath objects are created from a RectPath object through the densify operation.</description></item><item><title>PolygonPath</title><link>https://atlas-vis.github.io/docs/marks/polygonpath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/polygonpath/</guid><description>extends Path
The PolygonPath class represents a polygon mark that is used in visualizations such as the radar chart. You cannot create an PolygonPath object directly, instead, you need to use the densify method in the Scene class to transform a CirclePath to a PolygonPath. Here is an explanation of the densify operation.
Properties property explanation type default value radius the radius of the CirclePath from which this PolygonPath is created Number Properties inherited from Path property explanation type default value bounds the bounding rectangle of the path Rectangle x the x coordinate of the center of the CirclePath from which this PolygonPath is created Number y the y coordinate of the center of the CirclePath from which this PolygonPath is created Number curveMode how the segments are drawn String vertices the vertices along the path Array segments the segments on the path Array firstVertex returns the first vertex of the path Vertex firstSegment returns the first segment of the path Segment fillColor the fill color of the path if it is closed Color undefined strokeColor the stroke color of the path Color &amp;ldquo;#ccc&amp;rdquo; strokeDash the dashes and gaps for the path stroke String &amp;ldquo;none&amp;rdquo; strokeWidth the stroke width of the path in pixels Number 1 opacity the opacity value of the path (between 0 and 1) Number 1 vxShape the shape of the vertices on this path</description></item><item><title>RingPath</title><link>https://atlas-vis.github.io/docs/marks/ringpath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/ringpath/</guid><description>extends Path
The RingPath class represents a ring mark that is used in a Doughnut Chart and a Sunburst Chart. To create a RingPath object, use the mark method in the Scene class, for example:
let ring = scene.mark(&amp;quot;ring&amp;quot;, {x: 50, y: 100, innerRadius: 20, outerRadius: 40}); Properties property explanation type default value innerRadius the inner radius of the ring Number 100 outerRadius the outer radius of the ring Number 200 thickness the difference between the outer radius and inner radius Number 100 Properties inherited from Path property explanation type default value bounds the bounding rectangle of the path Rectangle x the x coordinate of the center of the ring Number 0 y the y coordinate of the center of the ring Number 0 vertices the vertices along the path Array segments the segments on the path Array firstVertex returns the first vertex of the path Vertex firstSegment returns the first segment of the path Segment fillColor the fill color of the path if it is closed Color undefined strokeColor the stroke color of the path Color &amp;ldquo;#ccc&amp;rdquo; strokeDash the dashes and gaps for the path stroke String &amp;ldquo;none&amp;rdquo; strokeWidth the stroke width of the path in pixels Number 1 opacity the opacity value of the path (between 0 and 1) Number 1 vxShape the shape of the vertices on this path</description></item><item><title>ArcPath</title><link>https://atlas-vis.github.io/docs/marks/arcpath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/arcpath/</guid><description>extends Path
The ArcPath class represents a sector mark that is used in a Doughnut Chart and a Sunburst Chart. You cannot create an ArcPath object directly, instead, you need to use the divide method in the Scene class to transform a RingPath to a collection of ArcPath objects. Here is an explanation of the divide operation.
Properties property explanation type default value innerRadius the inner radius of the arc Number 100 outerRadius the outer radius of the arc Number 200 startAngle the start angle of the arc in degrees Number 0 endAngle the end angle of the arc in degrees Number 90 angle the angle between the start angle and the end angle in degrees Number 90 thickness the difference between the outer radius and inner radius Number 100 Angles in Atlas are specified using the polar coordinate system, where 0 is at the positive x axis, and the angle increases in the counterclockwise direction.</description></item><item><title>LinkPath</title><link>https://atlas-vis.github.io/docs/marks/linkpath/</link><pubDate>Thu, 12 Nov 2020 15:22:20 +0100</pubDate><guid>https://atlas-vis.github.io/docs/marks/linkpath/</guid><description>extends Path
The LinkPath class represents a link in a node-link visualization. To create a LinkPath object, use the mark method in the Scene class, for example:
let link = scene.mark(&amp;quot;link&amp;quot;, {strokeColor: &amp;quot;#eee&amp;quot;, mode: &amp;quot;curveVertical&amp;quot;}); Properties property explanation type default value mode how the link will be drawn, current supports three modes:
&amp;ldquo;linear&amp;rdquo;, &amp;ldquo;curveHorizontal&amp;rdquo;, and &amp;ldquo;curveVertical&amp;rdquo; String &amp;ldquo;linear&amp;rdquo; source the mark representing the source node Mark target the mark representing the target node Mark sourceAnchor the anchor of the source mark this link is attached to Array [&amp;ldquo;center&amp;rdquo;, &amp;ldquo;middle&amp;rdquo;] targetAnchor the anchor of the target mark this link is attached to Array [&amp;ldquo;center&amp;rdquo;, &amp;ldquo;middle&amp;rdquo;] sourceOffset the offset between this link and the source mark&amp;rsquo;s anchor Array [0, 0] targetOffset the offset between this link and the target mark&amp;rsquo;s anchor Array [0, 0] Properties inherited from Path property explanation type default value bounds the bounding rectangle of the path Rectangle x the x coordinate of the center of the arc Number 0 y the y coordinate of the center of the arc Number 0 vertices the vertices along the path Array segments the segments on the path Array firstVertex returns the first vertex of the path Vertex firstSegment returns the first segment of the path Segment fillColor the fill color of the path if it is closed Color undefined strokeColor the stroke color of the path Color &amp;ldquo;#ccc&amp;rdquo; strokeDash the dashes and gaps for the path stroke String &amp;ldquo;none&amp;rdquo; strokeWidth the stroke width of the path in pixels Number 1 opacity the opacity value of the path (between 0 and 1) Number 1 vxShape the shape of the vertices on this path</description></item></channel></rss>